apiVersion: apps/v1
kind: Deployment
metadata:
  name: spring-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: spring-server
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: spring-server
    spec:
      containers:
        - name: main
          image: ghcr.io/kedify/springboot:tracing
          # command: ["sleep", "60000"]
          env:
          - name: OTEL_EXPORTER_OTLP_ENDPOINT
            value: https://router-collector.observability.svc:4317
          - name: OTEL_TRACES_EXPORTER
            value: none
          - name: OTEL_EXPORTER_OTLP_TRACES_ENDPOINT
            value: ""
          - name: OTEL_METRICS_EXPORTER
            value: "otlp"
          - name: OTEL_METRIC_EXPORT_INTERVAL
            value: "5000"
          # for server validates client
          - name: OTEL_EXPORTER_OTLP_CLIENT_CERTIFICATE
            value: /etc/tls/tls.crt
          - name: OTEL_EXPORTER_OTLP_CLIENT_KEY
            value: /var/run/otel/unencrypted.key
          # for client validates server
          - name: OTEL_EXPORTER_OTLP_CERTIFICATE
            value: /etc/ca-certificate/rootCA.crt
          - name: SERVER # to indicate that this image should be used as server, otherwise it pings the server
            value: ""
          - name: SERVICE_NAME
            value: "server"
          ports:
            - containerPort: 8080
          volumeMounts:
          - mountPath: /etc/ca-certificate
            name: keda-otel-root-ca-bundle
            readOnly: true
          - mountPath: /etc/tls
            name: spring-app-cert-secret
            readOnly: true
          - mountPath: /var/run/otel
            name: otel-client-key
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8080
              scheme: HTTP
            failureThreshold: 3
            initialDelaySeconds: 20
            periodSeconds: 25
            successThreshold: 1
            timeoutSeconds: 10
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8080
              scheme: HTTP
            failureThreshold: 3
            initialDelaySeconds: 50
            periodSeconds: 25
            successThreshold: 1
            timeoutSeconds: 10
      volumes:
      - name: keda-otel-root-ca-bundle
        secret:
          defaultMode: 420
          secretName: keda-otel-root-ca-bundle
      - name: spring-app-cert-secret
        secret:
          defaultMode: 420
          secretName: spring-app-cert-secret
      - name: otel-client-key
        emptyDir:
          medium: Memory
      # because Java is stupid and can't use the key file generated by cert manager ootb (we need to unencrypt it)
      initContainers:
        - name: make-otel-key
          image: ghcr.io/kedify/springboot:tracing
          # openssl is present in the image
          command:
            - /bin/sh
            - -c
            - |
              set -eo pipefail
              openssl pkcs8 -topk8 -nocrypt -in /etc/tls/tls.key -out /var/run/otel/unencrypted.key
              chmod 0400 /var/run/otel/unencrypted.key
          volumeMounts:
            - mountPath: /etc/tls
              name: spring-app-cert-secret
              readOnly: true
            - mountPath: /var/run/otel
              name: otel-client-key
---
apiVersion: v1
kind: Service
metadata:
  name: spring-server
spec:
  type: NodePort
  ports:
    - port: 8080
      name: http
      nodePort: 31197
  selector:
    app: spring-server
